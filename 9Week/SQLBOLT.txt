4.1: SELECT DISTINCT director FROM movies
ORDER BY director ASC;
4.2: SELECT DISTINCT director FROM movies
ORDER BY director ASC;
4.3: SELECT title FROM movies
ORDER BY title ASC
LIMIT 5;
4.4: SELECT title FROM movies
ORDER BY title ASC
LIMIT 5 OFFSET 5;
4.2.1: SELECT city, population FROM north_american_cities
WHERE country = "Canada";
4.2.2: SELECT city, latitude FROM north_american_cities
WHERE country = "United States"
ORDER BY latitude DESC;
4.2.3: SELECT city, longitude FROM north_american_cities
WHERE longitude < -87.629798
ORDER BY longitude ASC;
4.2.4: SELECT city, population FROM north_american_cities
WHERE country LIKE "Mexico"
ORDER BY population DESC
LIMIT 2;
4.2.5: SELECT city,population FROM north_american_cities
WHERE Country = "United States"
ORDER BY population DESC
LIMIT 2 OFFSET 2;

Inner  join: 
SELECT column, another_table_column, …
FROM mytable
INNER JOIN another_table 
    ON mytable.id = another_table.id
WHERE condition(s)
ORDER BY column, … ASC/DESC
LIMIT num_limit OFFSET num_offset;

6.1: SELECT title, domestic_sales, international_sales 
FROM movies
  JOIN boxoffice
    ON movies.id = boxoffice.movie_id;
6.2: SELECT title, domestic_sales, international_sales 
FROM movies
  JOIN boxoffice
    ON movies.id = boxoffice.movie_id
    WHERE international_sales> domestic_sales;
6.3: SELECT title, rating
FROM movies
  JOIN boxoffice
    ON movies.id = boxoffice.movie_id
ORDER BY rating DESC;



Outer Join: 
SELECT column, another_column, …
FROM mytable
INNER/LEFT/RIGHT/FULL JOIN another_table 
    ON mytable.id = another_table.matching_id
WHERE condition(s)
ORDER BY column, … ASC/DESC
LIMIT num_limit OFFSET num_offset;

7.1: SELECT DISTINCT building FROM employees;
7.2: SELECT * FROM buildings;
7.3: SELECT DISTINCT building_name, role 
FROM buildings 
  LEFT JOIN employees
    ON building_name = building;


NULL: 
SELECT column, another_column, …
FROM mytable
WHERE column IS/IS NOT NULL
AND/OR another_condition
AND/OR …;

12: Order odf executiron of a query:
SELECT DISTINCT column, AGG_FUNC(column_or_expression), …
FROM mytable
    JOIN another_table
      ON mytable.column = another_table.column
    WHERE constraint_expression
    GROUP BY column
    HAVING constraint_expression
    ORDER BY column ASC/DESC
    LIMIT count OFFSET COUNT;

1: FROM and JOIN
2: WHERE
3: GROPU BY
4: HAVING
5: SELECT
6: DITINCT
7: ORDER BY
